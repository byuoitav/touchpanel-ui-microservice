{"ast":null,"code":"\"use strict\";\n\nrequire(\"reflect-metadata\");\nvar MetadataStorage_1 = require(\"./metadata/MetadataStorage\");\nvar TypeMetadata_1 = require(\"./metadata/TypeMetadata\");\nvar SkipMetadata_1 = require(\"./metadata/SkipMetadata\");\n/**\n * Specifies a type of the property. Property needs to known about its type\n */\nfunction Type(typeFunction) {\n  return function (target, key) {\n    var type = Reflect.getMetadata(\"design:type\", target, key);\n    var isArray = type && typeof type === \"string\" ? type.toLowerCase() === \"array\" : false;\n    var metadata = new TypeMetadata_1.TypeMetadata(target.constructor, key, typeFunction, isArray);\n    MetadataStorage_1.defaultMetadataStorage.addTypeMetadata(metadata);\n  };\n}\nexports.Type = Type;\n/**\n * Marks property as skipped on the process of serialization and deserialization. By default it skips the property\n * for both serialization and deserialization, however you can specify on which of process (deserialization or\n * serialization) you want to skip this property.\n */\nfunction Skip(options) {\n  return function (target, key) {\n    var metadata = new SkipMetadata_1.SkipMetadata(target.constructor, key, options);\n    MetadataStorage_1.defaultMetadataStorage.addSkipMetadata(metadata);\n  };\n}\nexports.Skip = Skip;\n//# sourceMappingURL=Decorators.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}