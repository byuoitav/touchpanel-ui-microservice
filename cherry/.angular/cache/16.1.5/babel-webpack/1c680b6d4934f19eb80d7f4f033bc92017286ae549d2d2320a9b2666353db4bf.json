{"ast":null,"code":"import _defineProperty from \"/home/orcrist/Desktop/touchpanel-ui-microservice/cherry/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DataService } from \"../../services/data.service\";\nimport { CommandService } from \"../../services/command.service\";\nimport { ViaDialog } from \"../../dialogs/via.dialog\";\nimport { Panel } from \"../../objects/objects\";\nimport { StreamModalComponent } from \"../../dialogs/streammodal/streammodal.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data.service\";\nimport * as i2 from \"../../services/command.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"../volume/volume.component\";\nimport * as i7 from \"../recording/recording.component\";\nfunction DisplayComponent_div_1_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(d_r7 == null ? null : d_r7.getInputIcon());\n  }\n}\nfunction DisplayComponent_div_1_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const d_r7 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(d_r7 == null ? null : d_r7.input == null ? null : d_r7.input.displayname);\n  }\n}\nfunction DisplayComponent_div_1_ng_container_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Blank\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DisplayComponent_div_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DisplayComponent_div_1_ng_container_6_ng_container_1_Template, 3, 1, \"ng-container\", 14);\n    i0.ɵɵtemplate(2, DisplayComponent_div_1_ng_container_6_ng_template_2_Template, 2, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r14 = i0.ɵɵreference(3);\n    const d_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !d_r7.blanked)(\"ngIfElse\", _r14);\n  }\n}\nfunction DisplayComponent_div_1_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"off\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DisplayComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function DisplayComponent_div_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const d_r7 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      ctx_r18.toggleDisplay(d_r7);\n      return i0.ɵɵresetView(ctx_r18.command.buttonPress(\"selected display\", d_r7 == null ? null : d_r7.name));\n    })(\"press\", function DisplayComponent_div_1_Template_button_press_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const d_r7 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      ctx_r20.toggleDisplay(d_r7);\n      return i0.ɵɵresetView(ctx_r20.command.buttonPress(\"long press selected display\", d_r7 == null ? null : d_r7.name));\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵtemplate(5, DisplayComponent_div_1_i_5_Template, 2, 1, \"i\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, DisplayComponent_div_1_ng_container_6_Template, 4, 2, \"ng-container\", 14);\n    i0.ɵɵtemplate(7, DisplayComponent_div_1_ng_template_7_Template, 2, 0, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const d_r7 = ctx.$implicit;\n    const _r10 = i0.ɵɵreference(8);\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"mat-raised-button\", ctx_r0.selectedDisplays.has(d_r7));\n    i0.ɵɵproperty(\"color\", ctx_r0.selectedDisplays.has(d_r7) ? \"accent\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(d_r7 == null ? null : d_r7.displayname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !d_r7.blanked)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", d_r7.power != \"standby\")(\"ngIfElse\", _r10);\n  }\n}\nfunction DisplayComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DisplayComponent_ng_container_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DisplayComponent_ng_container_9_div_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const i_r22 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      ctx_r23.changeInput(i_r22);\n      return i0.ɵɵresetView(ctx_r23.command.buttonPress(\"change input\", {\n        input: i_r22.name,\n        displays: ctx_r23.getSelectedDisplayNames()\n      }));\n    })(\"press\", function DisplayComponent_ng_container_9_div_1_Template_button_press_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const i_r22 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      ctx_r25.changeInput(i_r22);\n      return i0.ɵɵresetView(ctx_r25.command.buttonPress(\"long press change input\", {\n        input: i_r22.name,\n        displays: ctx_r25.getSelectedDisplayNames()\n      }));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"i\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r22 = ctx.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"mat-raised-button\", ctx_r21.inputUsed(i_r22));\n    i0.ɵɵproperty(\"color\", ctx_r21.inputUsed(i_r22) ? \"accent\" : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r22.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r22.displayname);\n  }\n}\nfunction DisplayComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DisplayComponent_ng_container_9_div_1_Template, 7, 5, \"div\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.inputs);\n  }\n}\nfunction DisplayComponent_ng_container_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DisplayComponent_ng_container_10_div_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const i_r27 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      ctx_r28.changeInput(i_r27);\n      return i0.ɵɵresetView(ctx_r28.command.buttonPress(\"change input\", {\n        input: i_r27.name,\n        displays: ctx_r28.getSelectedDisplayNames()\n      }));\n    })(\"press\", function DisplayComponent_ng_container_10_div_1_Template_button_press_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const i_r27 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      ctx_r30.changeInput(i_r27);\n      return i0.ɵɵresetView(ctx_r30.command.buttonPress(\"long press change input\", {\n        input: i_r27.name,\n        displays: ctx_r30.getSelectedDisplayNames()\n      }));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"i\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r27 = ctx.$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"mat-raised-button\", ctx_r26.inputUsed(i_r27));\n    i0.ɵɵproperty(\"color\", ctx_r26.inputUsed(i_r27) ? \"accent\" : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r27.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r27.displayname);\n  }\n}\nfunction DisplayComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DisplayComponent_ng_container_10_div_1_Template, 7, 5, \"div\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.panel == null ? null : ctx_r3.panel.preset == null ? null : ctx_r3.panel.preset.inputs);\n  }\n}\nfunction DisplayComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"recording\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"recording\", ctx_r4.panel.preset == null ? null : ctx_r4.panel.preset.recording);\n  }\n}\nfunction DisplayComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 16);\n    i0.ɵɵtext(1, \"crop_landscape\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let DisplayComponent = /*#__PURE__*/(() => {\n  class DisplayComponent {\n    constructor(data, command, dialog) {\n      _defineProperty(this, \"data\", void 0);\n      _defineProperty(this, \"command\", void 0);\n      _defineProperty(this, \"dialog\", void 0);\n      _defineProperty(this, \"panel\", void 0);\n      _defineProperty(this, \"selectedDisplays\", new Set());\n      _defineProperty(this, \"inputs\", void 0);\n      _defineProperty(this, \"displays\", []);\n      this.data = data;\n      this.command = command;\n      this.dialog = dialog;\n      // default to the first display being selected\n    }\n\n    ngOnInit() {\n      if (this.panel && this.panel.preset) {\n        this.panel.preset.displays.forEach(display => {\n          if (!display.hidden) {\n            this.displays.push(display);\n          }\n        });\n      }\n      setTimeout(() => {\n        if (this.panel.preset.displays.length > 0) {\n          this.selectedDisplays.add(this.displays[0]);\n          this.getInputsForDisplay(this.displays[0]);\n        }\n      }, 0);\n    }\n    toggleDisplay(d) {\n      this.selectedDisplays.clear();\n      this.selectedDisplays.add(d);\n      this.getInputsForDisplay(d);\n      /* This code makes it so that the displays toggle\n          if (this.selectedDisplays.has(d))\n              this.selectedDisplays.delete(d);\n          else\n              this.selectedDisplays.add(d);\n          */\n    }\n\n    changeInput(i) {\n      if (i.subInputs !== undefined && i.subInputs.length > 0) {\n        this.dialog.open(StreamModalComponent, {\n          data: i\n        }).afterClosed().subscribe(theChosenOne => {\n          if (theChosenOne !== undefined) {\n            const input = theChosenOne;\n            this.command.setInput(this.panel.preset, input, Array.from(this.selectedDisplays)).subscribe(success => {\n              if (!success) {\n                console.warn(\"failed to change input\");\n              }\n            });\n          }\n        });\n      } else {\n        this.command.setInput(this.panel.preset, i, Array.from(this.selectedDisplays)).subscribe(success => {\n          if (!success) {\n            console.warn(\"failed to change input\");\n          }\n        });\n      }\n    }\n    blank() {\n      this.command.setBlank(true, Array.from(this.selectedDisplays)).subscribe(success => {\n        if (!success) {\n          console.warn(\"failed to blank\");\n        }\n      });\n    }\n    setMasterMute(muted) {\n      // if (muted) {\n      //   this.preset.beforeMuteLevel = this.preset.masterVolume;\n      //   // this.command.setMasterVolume(0, this.preset);\n      //   this.command.setMasterMute(muted, this.preset);\n      // } else {\n      //   // this.command.setMasterVolume(this.preset.beforeMuteLevel, this.preset);\n      //   this.command.setMasterMute(muted)\n      // }\n      this.command.setMasterMute(muted, this.panel.preset);\n    }\n    inputUsed(i) {\n      const selected = Array.from(this.selectedDisplays);\n      for (const d of selected) {\n        // because blank is treated like an input\n        if (d.blanked || d.input == null) {\n          continue;\n        }\n        if (d.input.name === i.name) {\n          return true;\n        }\n        if (i.subInputs !== undefined && i.subInputs.length > 0) {\n          for (const sub of i.subInputs) {\n            if (d.input.name === sub.name) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    }\n    isOneBlanked() {\n      const selected = Array.from(this.selectedDisplays);\n      for (const d of selected) {\n        if (d.blanked) {\n          return true;\n        }\n      }\n      return false;\n    }\n    openInputDialog(i) {\n      const config = this.data.getInputConfiguration(i);\n      switch (config.type._id) {\n        case \"via-connect-pro\":\n          console.log(\"opening via control dialog for\", i);\n          const dialogRef = this.dialog.open(ViaDialog, {\n            width: \"50vw\",\n            data: {\n              via: i\n            },\n            disableClose: true\n          });\n          break;\n        default:\n          console.log(\"nothing to do for type\", config.type._id);\n          break;\n      }\n    }\n    getSelectedDisplayNames() {\n      const displays = [];\n      this.selectedDisplays.forEach(d => {\n        displays.push(d.name);\n      });\n      return displays;\n    }\n    separateInputs(p) {\n      return p.features.includes(\"displaysSeparateInputs\");\n    }\n    getInputsForDisplay(d) {\n      var tempInputs = new Array();\n      for (const [key, value] of Object.entries(this.data.inputReachability)) {\n        if (value.includes(d.name)) {\n          tempInputs.push(this.panel.preset.inputs.find(x => x.name == key));\n        }\n      }\n      this.inputs = tempInputs;\n    }\n  }\n  _defineProperty(DisplayComponent, \"\\u0275fac\", function DisplayComponent_Factory(t) {\n    return new (t || DisplayComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CommandService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  });\n  _defineProperty(DisplayComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DisplayComponent,\n    selectors: [[\"display\"]],\n    inputs: {\n      panel: \"panel\"\n    },\n    decls: 18,\n    vars: 10,\n    consts: [[1, \"outputs\"], [4, \"ngFor\", \"ngForOf\"], [1, \"inputs\"], [\"mat-button\", \"\", 1, \"input\", \"mat-elevation-z7\", 3, \"color\", \"click\", \"press\"], [1, \"icon\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"class\", \"recording\", 4, \"ngIf\"], [1, \"volume-label\"], [1, \"volume\"], [3, \"level\", \"mute\", \"levelChange\", \"muteChange\"], [\"blankicon\", \"\"], [\"mat-button\", \"\", 1, \"output\", \"mat-elevation-z15\", 3, \"color\", \"click\", \"press\"], [\"class\", \"material-icons\", 4, \"ngIf\", \"ngIfElse\"], [4, \"ngIf\", \"ngIfElse\"], [\"powerOff\", \"\"], [1, \"material-icons\"], [\"blanked\", \"\"], [1, \"recording\"], [3, \"recording\"]],\n    template: function DisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DisplayComponent_div_1_Template, 9, 8, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\")(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DisplayComponent_Template_button_click_4_listener() {\n          ctx.blank();\n          return ctx.command.buttonPress(\"blank\", ctx.getSelectedDisplayNames());\n        })(\"press\", function DisplayComponent_Template_button_press_4_listener() {\n          ctx.blank();\n          return ctx.command.buttonPress(\"long press blank\", ctx.getSelectedDisplayNames());\n        });\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, DisplayComponent_ng_container_6_Template, 1, 0, \"ng-container\", 5);\n        i0.ɵɵelementStart(7, \"span\");\n        i0.ɵɵtext(8, \"Blank\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(9, DisplayComponent_ng_container_9_Template, 2, 1, \"ng-container\", 6);\n        i0.ɵɵtemplate(10, DisplayComponent_ng_container_10_Template, 2, 1, \"ng-container\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, DisplayComponent_div_11_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵtext(13, \"Master Display Volume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"volume\", 10);\n        i0.ɵɵlistener(\"levelChange\", function DisplayComponent_Template_volume_levelChange_15_listener($event) {\n          ctx.command.setMasterVolume($event, ctx.panel == null ? null : ctx.panel.preset);\n          return ctx.command.buttonPress(\"master volume set on display page\", {\n            level: $event\n          });\n        })(\"muteChange\", function DisplayComponent_Template_volume_muteChange_15_listener($event) {\n          ctx.setMasterMute($event.muted);\n          return ctx.command.buttonPress(\"master volume \" + ($event.muted ? \"mute\" : \"unmute\") + \" on display page\");\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, DisplayComponent_ng_template_16_Template, 2, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r5 = i0.ɵɵreference(17);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.displays);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"mat-raised-button\", ctx.isOneBlanked());\n        i0.ɵɵproperty(\"color\", ctx.isOneBlanked() ? \"accent\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.separateInputs(ctx.panel));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.separateInputs(ctx.panel));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.panel.preset == null ? null : ctx.panel.preset.recording == null ? null : ctx.panel.preset.recording.start);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"level\", ctx.panel == null ? null : ctx.panel.preset == null ? null : ctx.panel.preset.masterVolume)(\"mute\", ctx.panel == null ? null : ctx.panel.preset == null ? null : ctx.panel.preset.masterMute);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i4.NgTemplateOutlet, i5.MatButton, i6.VolumeComponent, i7.RecordingComponent],\n    styles: [\".inputs[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%], .inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{display:flex;align-content:center;justify-content:center;align-items:center}.inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{flex-direction:column}.inputs[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%]{flex-direction:row}.inputs[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%]{position:relative;max-width:90vw;margin-left:-.625vw}.inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:0 .5vw}.inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   .mat-button[_ngcontent-%COMP%], .outputs[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]   .mat-button[_ngcontent-%COMP%]{padding-top:1vh}.outputs[_ngcontent-%COMP%]{height:35vh;margin-top:4.375vh;margin-bottom:4.375vh;flex-wrap:wrap;text-align:center}.outputs[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{margin-right:.9vw;width:12.8571428571vw}.outputs[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{font-size:400%}.inputs[_ngcontent-%COMP%]{height:40vh;margin-bottom:5vh;margin-top:4vh;flex-wrap:wrap-reverse}.inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]{margin-right:.45vw;width:10vw;margin-bottom:1.7391304348vh}.inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{padding-top:1.3vh}.inputs[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{font-size:200%}.recording[_ngcontent-%COMP%]{position:absolute;bottom:0;left:1%;height:10%;width:90vw}.volume[_ngcontent-%COMP%]{position:absolute;bottom:0;right:1%;height:90%;width:11.25vw}.volume-label[_ngcontent-%COMP%]{position:absolute;top:4%;right:1%;width:11.25vw;text-align:center;font-size:10pt}\"]\n  }));\n  return DisplayComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}