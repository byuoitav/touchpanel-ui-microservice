{"ast":null,"code":"import _defineProperty from \"/home/orcrist/Desktop/touchpanel-ui-microservice/cherry/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { EventEmitter } from \"@angular/core\";\nimport { PointerType } from 'ngx-slider-v2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"ngx-slider-v2\";\nconst _c0 = [\"slider\"];\nconst _c1 = [\"thumb\"];\nfunction VolumeComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Mute\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction VolumeComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Unmute\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let VolumeComponent = /*#__PURE__*/(() => {\n  var _class;\n  class VolumeComponent {\n    constructor() {\n      _defineProperty(this, \"level\", void 0);\n      _defineProperty(this, \"mute\", void 0);\n      _defineProperty(this, \"options\", {\n        floor: 0,\n        ceil: 100,\n        step: 5,\n        vertical: true,\n        showSelectionBar: true\n      });\n      _defineProperty(this, \"levelChange\", new EventEmitter());\n      _defineProperty(this, \"muteChange\", new EventEmitter());\n      _defineProperty(this, \"beforeMuteLevel\", void 0);\n      //@ViewChild(\"slider\")\n      //slider: MatSliderModule;\n      _defineProperty(this, \"slider\", void 0);\n      _defineProperty(this, \"thumb\", void 0);\n      this.level = 0;\n      this.mute = false;\n      this.beforeMuteLevel = 0;\n    }\n    muteClick() {\n      let emit;\n      if (this.mute) {\n        emit = new MuteStatus(this.beforeMuteLevel, false);\n      } else {\n        this.beforeMuteLevel = this.level;\n        emit = new MuteStatus(0, true);\n      }\n      this.mute = !this.mute;\n      this.muteChange.emit(emit);\n      console.log(\"muteClick: level(\" + emit.level + \") mute(\" + emit.muted + \")\");\n    }\n    closeThumb() {\n      setTimeout(() => {\n        this.thumb.blur();\n      }, 2000);\n    }\n    onUserChange(changeContext) {\n      this.levelChange.emit(changeContext.value);\n      if (changeContext.pointerType === PointerType.Min) {\n        this.closeThumb();\n      }\n      if (changeContext.pointerType === PointerType.Max) {\n        this.closeThumb();\n      }\n      //if is mute and change level, unmute\n      if (this.mute) {\n        this.muteClick();\n      }\n      //if level is 0, mute\n      if (changeContext.value === 0) {\n        this.muteClick();\n      }\n      console.log(\"onUserChange: level(\" + changeContext.value + \") mute(\" + this.mute + \")\");\n    }\n  }\n  _class = VolumeComponent;\n  _defineProperty(VolumeComponent, \"\\u0275fac\", function VolumeComponent_Factory(t) {\n    return new (t || _class)();\n  });\n  _defineProperty(VolumeComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"volume\"]],\n    viewQuery: function VolumeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slider = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.thumb = _t.first);\n      }\n    },\n    inputs: {\n      level: \"level\",\n      mute: \"mute\"\n    },\n    outputs: {\n      levelChange: \"levelChange\",\n      muteChange: \"muteChange\"\n    },\n    decls: 8,\n    vars: 9,\n    consts: [[1, \"volume\"], [\"color\", \"primary\", 1, \"slider\", 3, \"options\", \"value\", \"userChange\", \"valueChange\"], [\"slider\", \"\"], [\"mat-raised-button\", \"\", 1, \"button\", 3, \"color\", \"click\", \"press\"], [4, \"ngIf\"]],\n    template: function VolumeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ngx-slider\", 1, 2);\n        i0.ɵɵlistener(\"userChange\", function VolumeComponent_Template_ngx_slider_userChange_1_listener($event) {\n          ctx.onUserChange($event.value);\n          return ctx.closeThumb();\n        })(\"valueChange\", function VolumeComponent_Template_ngx_slider_valueChange_1_listener($event) {\n          return ctx.mute ? ctx.beforeMuteLevel : ctx.level = $event;\n        });\n        i0.ɵɵtext(3, \" > \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function VolumeComponent_Template_button_click_5_listener() {\n          return ctx.muteClick();\n        })(\"press\", function VolumeComponent_Template_button_press_5_listener() {\n          return ctx.muteClick();\n        });\n        i0.ɵɵtemplate(6, VolumeComponent_ng_container_6_Template, 2, 0, \"ng-container\", 4);\n        i0.ɵɵtemplate(7, VolumeComponent_ng_container_7_Template, 2, 0, \"ng-container\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.options)(\"value\", ctx.mute ? ctx.beforeMuteLevel : ctx.level);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"secondary-theme\", !ctx.mute);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"muted\", ctx.mute);\n        i0.ɵɵproperty(\"color\", ctx.mute ? \"warn\" : \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mute);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mute);\n      }\n    },\n    dependencies: [i1.NgIf, i2.MatButton, i3.SliderComponent],\n    styles: [\".volume[_ngcontent-%COMP%]{height:100%;width:100%;min-height:100%!important;display:flex;flex-direction:column;align-items:center;justify-content:space-around}.slider[_ngcontent-%COMP%]{min-height:80%!important;margin-top:15px;margin-bottom:20px}.mute[_ngcontent-%COMP%]{margin-top:3vh}[_ngcontent-%COMP%]:ng-deep   .ngx-slider[_ngcontent-%COMP%]{height:80%}.ngx-slider.vertical[_ngcontent-%COMP%]{height:80%}[_ngcontent-%COMP%]:ng-deep   .ngx-slider.vertical[_ngcontent-%COMP%]{height:80%}[_ngcontent-%COMP%]:ng-deep   .ngx-slider[_ngcontent-%COMP%]   .ngx-slider-pointer[_ngcontent-%COMP%]{background-color:#0091ea!important}  .ngx-slider .ngx-slider-selection{background:#0091ea!important}  .ngx-slider .ngx-slider-limit{display:none!important}  .ngx-slider .ngx-slider-pointer:after{display:none!important;background:#0091ea!important}  .ngx-slider .ngx-slider-bubble{margin-left:.3vh;align-self:center}\"]\n  }));\n  return VolumeComponent;\n})();\nexport class MuteStatus {\n  constructor(level, muted) {\n    _defineProperty(this, \"level\", void 0);\n    _defineProperty(this, \"muted\", void 0);\n    this.level = level;\n    this.muted = muted;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}