{"ast":null,"code":"import _defineProperty from \"/home/orcrist/Desktop/touchpanel-ui-microservice/cherry/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { ConfirmHelpDialog } from \"./confirmhelp.dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"../services/command.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"../components/management/management.component\";\nfunction HelpDialog_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Please call AV Support at 801-422-7671 for help, or request help by pressing \");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"Request Help\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" to send support staff to you. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HelpDialog_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" No technicians are currently available. For emergencies please call 801-422-7671. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HelpDialog_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function HelpDialog_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      ctx_r3.requestHelp();\n      return i0.ɵɵresetView(ctx_r3.command.buttonPress(\"request help\"));\n    });\n    i0.ɵɵtext(1, \"Request Help \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let HelpDialog = /*#__PURE__*/(() => {\n  var _class;\n  class HelpDialog {\n    constructor(dialogRef, data, dialog, api, command) {\n      _defineProperty(this, \"dialogRef\", void 0);\n      _defineProperty(this, \"data\", void 0);\n      _defineProperty(this, \"dialog\", void 0);\n      _defineProperty(this, \"api\", void 0);\n      _defineProperty(this, \"command\", void 0);\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.dialog = dialog;\n      this.api = api;\n      this.command = command;\n    }\n    requestHelp() {\n      this.api.help(\"help\").subscribe(success => {\n        if (success) {\n          const dialogRef = this.dialog.open(ConfirmHelpDialog, {\n            width: \"70vw\",\n            disableClose: true\n          });\n          this.dialogRef.close();\n        } else {\n          console.error(\"failed to request help\");\n        }\n      });\n    }\n    cancel() {\n      this.dialogRef.close();\n    }\n    isAfterHours() {\n      let date = new Date();\n      let DayOfTheWeek = date.getDay();\n      let CurrentHour = date.getHours();\n      switch (DayOfTheWeek) {\n        // Sunday\n        case 0:\n          {\n            return true;\n          }\n        // Monday\n        case 1:\n          {\n            if (CurrentHour < 7 || CurrentHour >= 19) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        // Tuesday\n        case 2:\n          {\n            if (CurrentHour < 7 || CurrentHour >= 21) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        // Wednesday\n        case 3:\n          {\n            if (CurrentHour < 7 || CurrentHour >= 21) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        // Thursday\n        case 4:\n          {\n            if (CurrentHour < 7 || CurrentHour >= 21) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        // Friday\n        case 5:\n          {\n            if (CurrentHour < 7 || CurrentHour >= 20) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        // Saturday\n        case 6:\n          {\n            if (CurrentHour < 8 || CurrentHour >= 12) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        default:\n          {\n            return false;\n          }\n      }\n    }\n  }\n  _class = HelpDialog;\n  _defineProperty(HelpDialog, \"\\u0275fac\", function HelpDialog_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.APIService), i0.ɵɵdirectiveInject(i3.CommandService));\n  });\n  _defineProperty(HelpDialog, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"help\"]],\n    decls: 10,\n    vars: 4,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"text\"], [3, \"enabled\"], [\"mat-dialog-content\", \"\", 1, \"text\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\", 1, \"items\", \"secondary-theme\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function HelpDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Help\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"management\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, HelpDialog_p_4_Template, 5, 0, \"p\", 3);\n        i0.ɵɵtemplate(5, HelpDialog_p_5_Template, 2, 0, \"p\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function HelpDialog_Template_button_click_7_listener() {\n          ctx.cancel();\n          return ctx.command.buttonPress(\"exit help modal\");\n        });\n        i0.ɵɵtext(8, \"Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, HelpDialog_button_9_Template, 2, 0, \"button\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"enabled\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAfterHours());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAfterHours());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAfterHours());\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatButton, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i6.ManagementComponent],\n    styles: [\".text[_ngcontent-%COMP%]{text-align:center;font-family:Roboto,Helvetica Neue,sans-serif}.items[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center}\"]\n  }));\n  return HelpDialog;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}