{"ast":null,"code":"import _defineProperty from \"/home/orcrist/Desktop/touchpanel-ui-microservice/cherry/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/command.service\";\nimport * as i3 from \"@angular/material/button\";\nexport let ViaDialog = /*#__PURE__*/(() => {\n  var _class;\n  class ViaDialog {\n    constructor(dialogRef, command, data, dialog) {\n      _defineProperty(this, \"dialogRef\", void 0);\n      _defineProperty(this, \"command\", void 0);\n      _defineProperty(this, \"data\", void 0);\n      _defineProperty(this, \"dialog\", void 0);\n      this.dialogRef = dialogRef;\n      this.command = command;\n      this.data = data;\n      this.dialog = dialog;\n      if (this.data == null || this.data[\"via\"] == null) {\n        this.fail();\n      }\n    }\n    viaControl(endpoint) {\n      this.command.viaControl(this.data[\"via\"], endpoint).subscribe(success => {\n        if (success) {\n          this.dialogRef.close();\n        }\n      });\n    }\n    cancel() {\n      this.dialogRef.close();\n    }\n    fail() {\n      console.error(\"must include data, with field 'via', which is an Input. data passed in to ViaDialog:\", this.data);\n      this.dialogRef.close();\n    }\n  }\n  _class = ViaDialog;\n  _defineProperty(ViaDialog, \"\\u0275fac\", function ViaDialog_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.CommandService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog));\n  });\n  _defineProperty(ViaDialog, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"help\"]],\n    decls: 10,\n    vars: 0,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"text\"], [\"mat-dialog-actions\", \"\", 1, \"items\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"secondary-theme\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function ViaDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"VIA Control\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ViaDialog_Template_button_click_3_listener() {\n          ctx.cancel();\n          return ctx.command.buttonPress(\"exit via control modal\", ctx.data[\"via\"] == null ? null : ctx.data[\"via\"].name);\n        });\n        i0.ɵɵtext(4, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ViaDialog_Template_button_click_6_listener() {\n          ctx.viaControl(\"reset\");\n          return ctx.command.buttonPress(\"reset via\", ctx.data[\"via\"] == null ? null : ctx.data[\"via\"].name);\n        });\n        i0.ɵɵtext(7, \" Reset \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ViaDialog_Template_button_click_8_listener() {\n          ctx.viaControl(\"reboot\");\n          return ctx.command.buttonPress(\"reboot via\", ctx.data[\"via\"] == null ? null : ctx.data[\"via\"].name);\n        });\n        i0.ɵɵtext(9, \" Reboot \");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i3.MatButton, i1.MatDialogTitle, i1.MatDialogActions],\n    styles: [\".text[_ngcontent-%COMP%]{text-align:center;font-family:Roboto,Helvetica Neue,sans-serif}.items[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-evenly;align-items:center}\"]\n  }));\n  return ViaDialog;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}