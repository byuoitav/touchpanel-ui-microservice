{"ast":null,"code":"import _asyncToGenerator from \"/home/orcrist/Desktop/touchpanel-ui-microservice/blueberry/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/home/orcrist/Desktop/touchpanel-ui-microservice/blueberry/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { APIService } from \"../../services/api.service\";\nimport { CommandService } from \"../../services/command.service\";\nimport { ConfirmHelpModal } from \"../confirmhelpmodal/confirmhelpmodal.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../services/api.service\";\nimport * as i3 from \"../../services/command.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"../../components/management.component\";\nimport * as i7 from \"../../components/activity-button/activity-button.component\";\nfunction HelpModal_activity_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"activity-button\", 6);\n    i0.ɵɵlistener(\"success\", function HelpModal_activity_button_9_Template_activity_button_success_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openConfirmHelp());\n    });\n    i0.ɵɵtext(1, \"Request Help \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"click\", ctx_r0.requestHelp)(\"press\", ctx_r0.requestHelp);\n  }\n}\nexport let HelpModal = /*#__PURE__*/(() => {\n  class HelpModal {\n    constructor(ref, data, api, command, dialog) {\n      var _this = this;\n      _defineProperty(this, \"ref\", void 0);\n      _defineProperty(this, \"data\", void 0);\n      _defineProperty(this, \"api\", void 0);\n      _defineProperty(this, \"command\", void 0);\n      _defineProperty(this, \"dialog\", void 0);\n      _defineProperty(this, \"requestHelp\", /*#__PURE__*/_asyncToGenerator(function* () {\n        _this.command.buttonPress(\"request help\");\n        // TODO: update the return to use the new subscribe convention from rxjs\n        return new Promise((resolve, reject) => {\n          _this.api.help(\"help\").subscribe({\n            next: data => {\n              resolve(true);\n            },\n            error: err => {\n              console.error(\"failed to request help\", err);\n              resolve(false);\n            }\n          });\n        });\n      }));\n      _defineProperty(this, \"openConfirmHelp\", () => {\n        this.dialog.open(ConfirmHelpModal, {\n          width: \"80vw\",\n          disableClose: true\n        });\n        this.ref.close();\n      });\n      this.ref = ref;\n      this.data = data;\n      this.api = api;\n      this.command = command;\n      this.dialog = dialog;\n      console.log(\"help info:\", data);\n    }\n    ngOnInit() {\n      this.ref.disableClose = true;\n    }\n    cancel() {\n      this.command.buttonPress(\"exit help modal\");\n      this.ref.close();\n    }\n  }\n  _defineProperty(HelpModal, \"\\u0275fac\", function HelpModal_Factory(t) {\n    return new (t || HelpModal)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.APIService), i0.ɵɵdirectiveInject(i3.CommandService), i0.ɵɵdirectiveInject(i1.MatDialog));\n  });\n  _defineProperty(HelpModal, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HelpModal,\n    selectors: [[\"helpmodal\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[3, \"enabled\"], [\"mat-dialog-title\", \"\", 1, \"text\", \"title\"], [\"mat-dialog-content\", \"\", 1, \"text\"], [\"mat-dialog-actions\", \"\", 1, \"items\", \"secondary-theme\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\", \"press\"], [\"type\", \"mat-raised-button\", \"color\", \"primary\", \"spinnerColor\", \"accent\", 3, \"click\", \"press\", \"success\", 4, \"ngIf\"], [\"type\", \"mat-raised-button\", \"color\", \"primary\", \"spinnerColor\", \"accent\", 3, \"click\", \"press\", \"success\"]],\n    template: function HelpModal_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"management\", 0);\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Help\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function HelpModal_Template_button_click_7_listener() {\n          return ctx.cancel();\n        })(\"press\", function HelpModal_Template_button_press_7_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(8, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, HelpModal_activity_button_9_Template, 2, 2, \"activity-button\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"enabled\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.data == null ? null : ctx.data.msg);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.data == null ? null : ctx.data.showConfirm);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatButton, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i6.ManagementComponent, i7.ActivityButtonComponent],\n    styles: [\".text[_ngcontent-%COMP%]{text-align:center;font-family:Roboto,Helvetica Neue,sans-serif;font-size:1.3em}.text.title[_ngcontent-%COMP%]{font-size:1.7em}.items[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center}activity-button[_ngcontent-%COMP%]{margin-left:8px}\"]\n  }));\n  return HelpModal;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}